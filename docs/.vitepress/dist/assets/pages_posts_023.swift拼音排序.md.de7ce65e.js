import{_ as p,D as o,o as e,c as t,z as a,a as n,t as r,G as c,O as D}from"./chunks/framework.89d0ee0c.js";const b=JSON.parse('{"title":"Swift拼音排序","description":"","frontmatter":{"title":"Swift拼音排序","date":"2022-12-08T14:11:38.000Z","img":"https://s2.loli.net/2023/07/03/NiF6rJEzApDe4vw.png"},"headers":[],"relativePath":"pages/posts/023.swift拼音排序.md","filePath":"pages/posts/023.swift拼音排序.md"}'),F={name:"pages/posts/023.swift拼音排序.md"},y={id:"frontmatter-title",tabindex:"-1"},C=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }} <Badge type="tip" :text="String($frontmatter.date).slice(0,10)" />"'},"​",-1),A=D(`<p><img src="https://s2.loli.net/2023/07/03/NiF6rJEzApDe4vw.png" alt="f509bf807265f75b1b5529489de2a78b"></p><p>在最近的开发工作中，我需要完成一个排序的功能：把数据按名称排序，思路也很简单，首先把名称转换为拼音，再把拼音按照常规的字母排序即可，于是我找到了如下代码。</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> startTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CFAbsoluteTimeGetCurrent</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> number:</span><span style="color:#FFCB6B;">Int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">results </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">  results.</span><span style="color:#82AAFF;">sorted</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value1, value2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> pinyin1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> value1.name</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">transformToPinYin</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">lowercased</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> pinyin2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> value2.name</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">transformToPinYin</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">lowercased</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	number </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> pinyin1.</span><span style="color:#82AAFF;">compare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pinyin2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> .orderedAscending</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> endTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CFAbsoluteTimeGetCurrent</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">debugPrint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">代码处理</span><span style="color:#89DDFF;">\\(</span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">条执行时长：</span><span style="color:#89DDFF;">\\((</span><span style="color:#A6ACCD;">endTime </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> startTime</span><span style="color:#89DDFF;">)*</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> 毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//&quot;代码处理734条执行时长：2005.2640438079834 毫秒&quot;</span></span></code></pre></div><p>发现异常耗时，因为转换拼音本来就是一个较慢的工作。</p><p>再经过测试后发现sorted中的转换换会执行不止1次，具体排序算法可以以后研究下。</p><blockquote><p>[TimSort算法](<a href="https://www.cnblogs.com/sunshuyi/p/12680918.html" target="_blank" rel="noreferrer">世界上最快的排序算法——Timsort - 佛西先森 - 博客园 (cnblogs.com)</a>)（选择+归并）</p></blockquote><p>实际上在sorted的过程中，转换为拼音其实只需要一次，并不用每次都做重复的转换，所以立即想到了排序前用字典把需要排序的name的拼音存下来，在排序中只需要拿到对应的值就可以了。</p><div class="language-swift"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> startTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CFAbsoluteTimeGetCurrent</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> number:</span><span style="color:#FFCB6B;">Int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> pinyinDict:</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">UUID</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">]</span><span style="color:#676E95;font-style:italic;">//第二种</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> results</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    pinyinDict</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">item.id</span><span style="color:#89DDFF;">!]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> item.name</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">transformToPinYin</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">lowercased</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    number </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">let</span><span style="color:#A6ACCD;"> endTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CFAbsoluteTimeGetCurrent</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">debugPrint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">拼音处理</span><span style="color:#89DDFF;">\\(</span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">条执行时长：</span><span style="color:#89DDFF;">\\((</span><span style="color:#A6ACCD;">endTime </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> startTime</span><span style="color:#89DDFF;">)*</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> 毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">results </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">  results.</span><span style="color:#82AAFF;">sorted</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value1, value2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> pinyinDict</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">value1.id</span><span style="color:#89DDFF;">!]!</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">compare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pinyinDict</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">value2.id</span><span style="color:#89DDFF;">!]!)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> .orderedAscending</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">debugPrint</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">比较时间：</span><span style="color:#89DDFF;">\\((</span><span style="color:#82AAFF;">CFAbsoluteTimeGetCurrent</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> endTime</span><span style="color:#89DDFF;">)*</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> 毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//&quot;拼音处理70条执行时长：88.63401412963867 毫秒&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//&quot;比较时间：1.7720460891723633 毫秒&quot;</span></span></code></pre></div><p>速度明显大幅度提升。</p><p><a href="http://www.rcyd.net/mobnews/16382.html" target="_blank" rel="noreferrer">http://www.rcyd.net/mobnews/16382.html</a></p><p>提到了可以用缓存的方式进行存储，等有可以再优化下。目前每条数据1毫秒的耗时还可以接受。</p><p>下另一种优化方案：给数据库中加入拼音字段，这样在排序时可以减少大量工作。</p>`,12);function i(s,m,d,u,f,_){const l=o("Badge");return e(),t("div",null,[a("h1",y,[n(r(s.$frontmatter.title)+" ",1),c(l,{type:"tip",text:String(s.$frontmatter.date).slice(0,10)},null,8,["text"]),n(),C]),A])}const h=p(F,[["render",i]]);export{b as __pageData,h as default};
